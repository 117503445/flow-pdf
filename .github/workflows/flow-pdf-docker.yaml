name: flow-pdf-docker

on:
  push:
    paths:
      - ".github/workflows/flow-pdf-docker.yaml"
      - "Dockerfile"
      - ".dockerignore"
      - "pyproject.toml"
      - "flow_pdf/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v3

      - run: cd flow_pdf && ../script/write_git_info.sh
        env:
          SHA: ${{ github.sha }}

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://github.com/docker/login-action
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALI_REGISTRY_USERNAME }}
          password: ${{ secrets.ALI_REGISTRY_PASSWORD }}

      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            117503445/flow-pdf
            registry.cn-hangzhou.aliyuncs.com/117503445-mirror/flow-pdf
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest

      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  update-fc-version:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      # https://github.com/actions/setup-node
      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: install serverless-devs
        run: npm install -g @serverless-devs/s

      - id: commit
        uses: pr-mpt/actions-commit-hash@v2
        with:
          prefix: "sha-"
          
      # https://help.aliyun.com/document_detail/295913.html
      - name: Update fc version
        run: |
          s config add --AccountID ${{secrets.AccountID}} --AccessKeyID ${{secrets.FC_ACCESS_KEY_ID}} --AccessKeySecret ${{secrets.FC_ACCESS_KEY_SECRET}} -a default

          CONFIG='{
            "image": "registry-vpc.cn-hangzhou.aliyuncs.com/117503445-mirror/flow-pdf:latest",
            "command": "[\"python\", \"fc.py\"]"
          }'

          s cli fc-api updateFunction --region cn-hangzhou --access default --serviceName flow-pdf --functionName convert-pdf --customContainerConfig $CONFIG
